- platform: uptime
  name: Home Assistant Uptime

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /home
    - type: memory_use_percent
    - type: memory_use
    - type: swap_use
    - type: swap_free
    - type: swap_use_percent
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: memory_free
    - type: last_boot
    - type: processor_use
    - type: network_in
      arg: enp1s0
    - type: network_out
      arg: enp1s0
    - type: ipv4_address
      arg: enp1s0
    - type: throughput_network_in
      arg: enp1s0
    - type: throughput_network_out
      arg: enp1s0
    - type: processor_use

# This sensor will display the current version of HA, another simple sensor setup which will create sensor.latest_version.
- platform: version

- platform: authenticated

# This sensor displays any pending updates within Supervisor (add-on store) by using the 'command line' platform.
# The sensor name for this one is sensor.supervisor_updates.
- platform: command_line
  name: Supervisor updates
  command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"addons":[.data.addons[] | select(.version != .installed)]}'''
  value_template: "{{ value_json.addons | length }}"
  json_attributes:
    - newest_version
    - current_version
    - addons

- platform: template
  sensors:
    #----- Count Automations
    count_automations:
      value_template: "{{ states.automation | list | length }}"
    #----- Count Scripts
    count_scripts:
      value_template: "{{ states.script| list | length }}"
    #----- Count Device Trackers
    count_device_trackers:
      value_template: "{{ states.device_tracker | list | length }}"
    #----- Count Binary Sensors
    count_binary_sensors:
      value_template: "{{ states.binary_sensor| list | length }}"
    #----- Count Sensors
    count_sensors:
      value_template: "{{ states.sensor | list | length }}"
    #----- Count Switches
    count_switches:
      value_template: "{{ states.switch | list | length }}"
    #----- Count Zones
    count_zones:
      value_template: "{{ states.zone | list | length }}"
    #----- Input Booleans
    count_input_booleans:
      value_template: "{{ states.input_boolean | list | length }}"
    #----- Input Numbers
    count_input_numbers:
      value_template: "{{ states.input_number | list | length }}"
    #----- Input Texts
    count_input_texts:
      value_template: "{{ states.input_text | list | length }}"
    #----- Input Selects
    count_input_selects:
      value_template: "{{ states.input_select | list | length }}"
    #----- Input Date Times
    count_input_datetimes:
      value_template: "{{ states.input_datetime | list | length }}"

- platform: template
  sensors:
    fuzzy_time:
      value_template: >-
        {% set minute = (now().minute / 5)|round %}
        {% if minute > 6 %} {% set hour = now().hour + 1 %}{% else %}{% set hour = now().hour %}{% endif %}
        {% set hourtext = [("midnight"), ("one"), ("two"), ("three"), ("four"), ("five"), ("six"), ("seven"), ("eight"), ("nine"), ("ten"), ("eleven"), ("noon"), ("one"), ("two"), ("three"), ("four"), ("five"), ("six"), ("seven"), ("eight"), ("nine"), ("ten"), ("eleven"), ("midnight")] %}
        {% set fuzzytext = [("o'clock"), ("five past"), ("ten past"), ("quarter past"), ("twenty past"), ("twenty five past"), ("half past"), ("twenty five to"), ("twenty to"), ("quarter to"), ("ten to"), ("five to"), ("o'clock")] %}
        {% if minute not in [0, 12] %}{{ fuzzytext[minute] }} {% endif %}{{ hourtext[hour] }}{% if minute in [0, 12] and hour not in [0, 12, 24] %} {{ fuzzytext[minute] }}{% endif %}
      icon_template: "hass:clock"
      friendly_name: "Fuzzy Time"

- platform: template
  sensors:
    last_snapshot_backup:
      friendly_name: "Last Snapshot"
      value_template: "{{ as_timestamp(state_attr('sensor.snapshot_backup', 'last_snapshot')) | timestamp_custom('%m/%d@%-I%p') }}"


- platform: sql
  #db_url: mysql://user:password@localhost/hass
  db_url: !secret mariadb_conn_string
  queries:
    - name: mariaDB size
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
      column: "value"
      unit_of_measurement: MB

  # Tracking entity to zone friendly name
- platform: waze_travel_time
  name: Home to Coveo
  origin: zone.home
  destination: zone.coveo 
  region: "US"

- platform: waze_travel_time
  name: Home to Cochon
  origin: zone.home
  destination: zone.cochon 
  region: "US"

#https://www.home-assistant.io/integrations/season/
- platform: season

- platform: plex_recently_added
  name: Recently Added Movies # will create sensor.recently_added_movies
  token: !secret plex_token
  host: !secret machine_ip
  port: 32400
  section_types:
    - movie

- platform: plex_recently_added
  name: Recently Added TV  # will create sensor.recently_added_tv
  token: !secret plex_token
  host: !secret machine_ip
  port: 32400
  section_types:
    - show
  exclude_keywords:
    - kardashian

# https://www.home-assistant.io/integrations/github/
- platform: github
  access_token: !secret github_access_token
  repositories:
    - path: 'home-assistant/core'
      name: github.ha_core
    - path: 'petebdeblois/SQL_inventory_backend'
      name: github.SQL_backend

- platform: google_fit
  name: Google Fit
  client_id: !secret googlecalendar_client_id
  client_secret: !secret googlecalendar_client_secret

- platform: travisci
  api_key: !secret github_access_token
  monitored_conditions:
  - last_build_id
  - last_build_state
  - last_build_finished_at
  - last_build_started_at
  - last_build_duration

# https://github.com/grinstantin/todoist-card
- platform: rest
  name: To-do Finance
  method: GET
  resource: 'https://api.todoist.com/sync/v8/projects/get_data'
  params:
    token: !secret todoist_api
    project_id: 1767426044
  value_template: '{{value_json[''project''][''id'']}}'
  json_attributes:
    - items
  scan_interval: 60
- platform: rest
  name: To-do Errands
  method: GET
  resource: 'https://api.todoist.com/sync/v8/projects/get_data'
  params:
    token: !secret todoist_api
    project_id: 1767426042
  value_template: '{{value_json[''project''][''id'']}}'
  json_attributes:
    - items
  scan_interval: 60
- platform: rest
  name: To-do Home
  method: GET
  resource: 'https://api.todoist.com/sync/v8/projects/get_data'
  params:
    token: !secret todoist_api
    project_id: 1767426041
  value_template: '{{value_json[''project''][''id'']}}'
  json_attributes:
    - items
  scan_interval: 60
- platform: rest
  name: To-do Dev
  method: GET
  resource: 'https://api.todoist.com/sync/v8/projects/get_data'
  params:
    token: !secret todoist_api
    project_id: 2265408384
  value_template: '{{value_json[''project''][''id'']}}'
  json_attributes:
    - items
  scan_interval: 60


# https://github.com/custom-components/feedparser
- platform: feedparser
  name: News Rad Can Grands Titres
  feed_url: 'https://ici.radio-canada.ca/rss/4159'
  date_format: '%a, %b %d %I:%M %p'
  inclusions:
    - title
    - link
    - description
    - pubDate
  exclusions:
    - language

- platform: feedparser
  name: News F1.com
  feed_url: 'https://www.formula1.com/content/fom-website/en/latest/all.xml'
  date_format: '%a, %b %d %I:%M %p'
  inclusions:
    - title
    - link
    - description
  exclusions:
    - guid
- platform: feedparser
  name: News MMA Fighting
  feed_url: 'https://www.mmafighting.com/rss/current'
  date_format: '%a, %b %d %I:%M %p'
  inclusions:
    - title
    - link
    - description
    - published
    - link
  exclusions:
    - updated

- platform: fitbit
  clock_format: 24H
  unit_system: en_US
  monitored_resources:
  - "activities/tracker/activityCalories"
  - "activities/tracker/calories"
  - "activities/tracker/distance"
  - "activities/tracker/elevation"
  - "activities/tracker/floors"
  - "activities/tracker/minutesFairlyActive"
  - "activities/tracker/minutesLightlyActive"
  - "activities/tracker/minutesSedentary"
  - "activities/tracker/minutesVeryActive"
  - "activities/tracker/steps"
  - "activities/heart"
  - "body/bmi"
  - "body/fat"
  - "body/weight"
  - "devices/battery"
  - "sleep/awakeningsCount"
  - "sleep/efficiency"
  - "sleep/minutesAfterWakeup"
  - "sleep/minutesAsleep"
  - "sleep/minutesAwake"
  - "sleep/minutesToFallAsleep"
  - "sleep/startTime"
  - "sleep/timeInBed"

# - platform: template
  # sensors:
    # test_voltage:
      # value_template: "{{ state_attr('switch.test', 'voltage') }}"
      # unit_of_measurement: 'V'
    # test_current:
      # value_template: 
        # "{{ states.switch.test.attributes.current }}"
      # unit_of_measurement: 'mA'
    # test_current_consumption:
      # value_template: 
        # "{{ states.switch.test.attributes.current_consumption }}"
      # unit_of_measurement: 'W'
# 
# - platform: template
  # sensors:
    # washing_machine_voltage:
      # value_template: "{{ state_attr('switch.bathroom_washing_machine', 'voltage') }}"
      # unit_of_measurement: 'V'
    # washing_machine_current:
      # value_template: 
        # "{{ states.switch.bathroom_washing_machine.attributes.current }}"
      # unit_of_measurement: 'mA'
    # washing_machine_current_consumption:
      # value_template: 
        # "{{ states.switch.bathroom_washing_machine.attributes.current_consumption }}"
      # unit_of_measurement: 'W'

#https://community.home-assistant.io/t/trigger-on-washing-machine-finish/251990/2
- platform: template
  sensors:
    washing_maching_is_running:
      friendly_name: Washing Machine Is Running
      value_template: >-
        {% if states('sensor.bathroom_washing_machine_power')|float > 6 %}
          True
        {% else %}
          False
        {% endif %} 

- platform: template
  sensors:
    lights_turned_on:
      friendly_name: Numbers of lights turned on
      value_template: >-
        {% set ns = namespace(res=0) %}
        {% for light in state_attr('light.all_lights', 'entity_id') if is_state(light, 'on') %}
          {% set ns.res = ns.res + 1 %}
        {%endfor%}
        {{ ns.res }}
- platform: template
  sensors:
    lights_turned_off:
      friendly_name: Numbers of lights turned off
      value_template: >-
        {% set ns = namespace(res=0) %}
        {% for light in state_attr('light.all_lights', 'entity_id') if is_state(light, 'off') %}
          {% set ns.res = ns.res + 1 %}
        {%endfor%}
        {{ ns.res }}

- platform: template
  sensors:
    switches_turned_on:
      friendly_name: Numbers of switches turned on
      value_template: >-
        {% set ns = namespace(res=0) %}
        {% for switch in state_attr('group.all_switches', 'entity_id') if is_state(switch, 'on') %}
          {% set ns.res = ns.res + 1 %}
        {%endfor%}
        {{ ns.res }}
- platform: template
  sensors:
    switches_turned_off:
      friendly_name: Numbers of switches turned off
      value_template: >-
        {% set ns = namespace(res=0) %}
        {% for switch in state_attr('group.all_switches', 'entity_id') if is_state(switch, 'off') %}
          {% set ns.res = ns.res + 1 %}
        {%endfor%}
        {{ ns.res }}

# Is Today a School Day?
# https://community.home-assistant.io/t/morning-automation-based-on-calendar/334274
- platform: template
  sensors:
    school_day:
      friendly_name: Is it a school day?
      value_template: "{{ is_state('calendar.school', 'on') }}"

- platform: template
  sensors:
    avg_humidity:
      friendly_name: Average Humidity?
      value_template: "{{(states.sensor.bathroom_humidity.state|float + states.sensor.living_room_humidity.state|float + states.sensor.bedroom_humidity.state|float + states.sensor.living_room_humidity.state|float + states.sensor.office_humidity.state|float)/4}}"





