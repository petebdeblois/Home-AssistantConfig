- platform: uptime
  name: Home Assistant Uptime

- platform: authenticated

# This sensor displays any pending updates within Supervisor (add-on store) by using the 'command line' platform.
# The sensor name for this one is sensor.supervisor_updates.
- platform: command_line
  name: Supervisor updates
  command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"addons":[.data.addons[] | select(.version != .installed)]}'''
  value_template: "{{ value_json.addons | length }}"
  json_attributes:
    - newest_version
    - current_version
    - addons


#https://www.home-assistant.io/integrations/season/
- platform: season

- platform: travisci
  api_key: !secret github_access_token
  monitored_conditions:
  - last_build_id
  - last_build_state
  - last_build_finished_at
  - last_build_started_at
  - last_build_duration

# https://github.com/Limych/ha-average 
- platform: average
  name: 'Average Temperature'
  entities:
    - sensor.bathroom_temperature
    - sensor.living_room_temperature
    - sensor.bedroom_temperature
    - sensor.office_temperature

- platform: average
  name: 'Average Humidity'
  entities:
  - sensor.bathroom_humidity
  - sensor.living_room_humidity
  - sensor.bedroom_humidity
  - sensor.office_humidity


# https://www.home-assistant.io/integrations/history_stats/

# - platform: history_stats
#   name: Lamp ON today
#   entity_id: light.office_lamp
#   state: "on"
#   type: time
#   start: "{{ now().replace(hour=0, minute=0, second=0) }}"
#   duration:
#     hours: 24
# - platform: history_stats
#   name: Switch ON today
#   entity_id: switch.office_screens
#   state: "on"
#   type: time
#   start: "{{ now().replace(hour=0, minute=0, second=0) }}"
#   duration:
#     hours: 24

# - platform: mqtt
#   name: "Civic Torque"
#   state_topic: "devices/civic/torque"
#   value_template: "{{ state_attr('sensor.civic_torque', 'GPS Time') }}"
#   json_attributes_topic: "devices/civic/torque"

# - platform: template
#   sensors:
#     civic_torque_litresper100:
#       value_template: '{{ states.sensor.civic_torque.attributes["Litres Per 100 Kilometer(Long Term Average)(l/100km)"] | round(2) }}'
#       unit_of_measurement : "l/100km"
#     civic_torque_fuelremaining_profile:
#       value_template: '{{ states.sensor.civic_torque.attributes["Fuel Remaining (Calculated from vehicle profile)(%)"] | round(2) }}'
#       unit_of_measurement : "%"
#     civic_torque_fuelremaining_ecu:
#       value_template: '{{ states.sensor.civic_torque.attributes["Fuel Level (From Engine ECU)(%)"] | round(2) }}'
#       unit_of_measurement : "%"
#     civic_torque_distance_empty:
#       value_template: '{{ states.sensor.civic_torque.attributes["Distance to empty (Estimated)(km)"] | round(2) }}'
#       unit_of_measurement : "km"
#     civic_torque_rpm:
#       value_template: '{{ states.sensor.civic_torque.attributes["Engine RPM(rpm)"] | round(2) }}'
#       unit_of_measurement : "rpm"





