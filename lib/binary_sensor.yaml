- platform: ping
  host: 8.8.8.8
  name: WAN
  scan_interval: 60
- platform: ping
  host: 192.168.2.1
  name: Gateway
  scan_interval: 60
- platform: ping
  host: 192.168.2.60
  name: Machine
  scan_interval: 60
- platform: ping
  host: 192.168.2.65
  name: Server
  scan_interval: 60
- platform: ping
  host: 192.168.2.150
  name: Laurel
  scan_interval: 60
- platform: ping
  host: 192.168.2.151
  name: Hardy
  scan_interval: 60
- platform: ping
  host: 192.168.2.105
  name: Dash
  scan_interval: 60

- platform: workday
  country: CA

- platform: template
  sensors:
    rain_alert:
      value_template: >-
        {% set D0 = states.weather.openweathermap.attributes.forecast[0].precipitation_probability | int %}
        {% set D1 = states.weather.openweathermap.attributes.forecast[1].precipitation_probability | int %}
        {% set D2 = states.weather.openweathermap.attributes.forecast[2].precipitation_probability | int %}
        {% set D3 = states.weather.openweathermap.attributes.forecast[3].precipitation_probability | int %}
        {% set D4 = states.weather.openweathermap.attributes.forecast[4].precipitation_probability | int %}
        {% set D5 = states.weather.openweathermap.attributes.forecast[5].precipitation_probability | int %}
        {% set D6 = states.weather.openweathermap.attributes.forecast[6].precipitation_probability | int %}
        {% set D7 = states.weather.openweathermap.attributes.forecast[7].precipitation_probability | int %}
        {% set D8 = states.weather.openweathermap.attributes.forecast[8].precipitation_probability | int %}
        {% set D9 = states.weather.openweathermap.attributes.forecast[9].precipitation_probability | int %}
        {% set D10 = states.weather.openweathermap.attributes.forecast[10].precipitation_probability | int %}
        {% set D11 = states.weather.openweathermap.attributes.forecast[11].precipitation_probability | int %}
        {% if D0 > 50 %} on
        {% elif D1 > 50 %} on
        {% elif D2 > 60 %} on
        {% elif D3 > 70 %} on
        {% elif D4 > 73 %} on
        {% elif D5 > 75 %} on
        {% elif D6 > 75 %} on
        {% elif D7 > 75 %} on
        {% elif D8 > 75 %} on
        {% elif D9 > 90 %} on
        {% elif D10 > 90 %} on
        {% elif D11 > 90 %} on
        {% elif (D1+D2+D3+D4+D5) > 100 %} on
        {% else %} off
        {% endif %}
      icon_template: >
          {% if is_state('binary_sensor.rain_alert','on') %} mdi:weather-pouring
          {% else %} mdi:weather-sunny
          {% endif %}

# https://www.reddit.com/r/homeassistant/comments/pftf59/ha_is_a_hammer_and_now_im_looking_for_things_to/
# Let's say you want some light on at 50%, but only when that room is occupied, and only on weekdays, and only when your partner is away. Then let's say you want it on for 
# your partner when you're away, at 100%, and on when you're both home at 75%.
# So we can break this down into 4 binaries: light_should_be_on_50, light_should_be_on_75, 
# light_should_be_on_100, and light_should_be_off.
# Let's start with the last one, should be off. This is simple, 
# the conditions for off are "is it not a weekday" and "is the room unoccupied", 
# so let's make a sensor for that:

- platform: template
  sensors:
    outside_light_should_be_off:
      friendly_name: Outside Light Should Be Off
      value_template: >-
          {% set not_weekday = is_state('binary_sensor.workday','off') %}
          {% set sun_out = is_state('binary_sensor.evening','off') %}
          {{ not_weekday and sun_out }}

- platform: template
  sensors:
    outside_light_should_be_50:
      friendly_name: Light Should Be 50
      value_template: >-
        {% set should_be_off = is_state('binary_sensor.outside_light_should_be_off','on') %}
        {% set pete_home = is_state('device_tracker.pete_s20','home') %}
        {% set julie_home = is_state('device_tracker.julie_s20','home') %}
        {{ pete_home and not julie_home and not should_be_off }}

- platform: template
  sensors:
    outside_light_should_be_75:
      friendly_name: Light Should Be 75
      value_template: >-
        {% set should_be_off = is_state('binary_sensor.outside_light_should_be_off','on') %}
        {% set pete_home = is_state('device_tracker.pete_s20','home') %}
        {% set julie_home = is_state('device_tracker.julie_s20','home') %}
        {{ julie_home and pete_home and not should_be_off }}

- platform: template
  sensors:
    outside_light_should_be_100:
      friendly_name: Light Should Be 100
      value_template: >-
          {% set should_be_off = is_state('binary_sensor.outside_light_should_be_off','on') %}
          {% set pete_home = is_state('device_tracker.pete_s20','home') %}
          {% set julie_home = is_state('device_tracker.julie_s20','home') %}
          {{ julie_home and pete_home and not should_be_off }}

# https://www.home-assistant.io/integrations/tod/
- platform: tod
  name: Early Morning
  after: sunrise
  after_offset: "-02:00"
  before: "08:00"

- platform: tod
  name: Evening
  after: sunset
  after_offset: "-02:00"
  before: "23:00"

- platform: tod
  name: Night
  after: sunset
  before: sunrise

- platform: tod
  name: Day
  after: sunrise
  before: sunset
